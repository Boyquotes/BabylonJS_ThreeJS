import { __extends } from "tslib";
import { TransformNode } from "@babylonjs/core/Meshes/transformNode.js";
import { ContentDisplay3D } from "./contentDisplay3D.js";
/**
 * Class used as a root to all buttons
 */
var AbstractButton3D = /** @class */ (function (_super) {
    __extends(AbstractButton3D, _super);
    /**
     * Creates a new button
     * @param name defines the control name
     */
    function AbstractButton3D(name) {
        return _super.call(this, name) || this;
    }
    AbstractButton3D.prototype._getTypeName = function () {
        return "AbstractButton3D";
    };
    // Mesh association
    AbstractButton3D.prototype._createNode = function (scene) {
        return new TransformNode("button" + this.name, scene);
    };
    return AbstractButton3D;
}(ContentDisplay3D));
export { AbstractButton3D };
//# sourceMappingURL=abstractButton3D.js.map