import { __extends } from "tslib";
import { AdvancedDynamicTexture } from "../../2D/advancedDynamicTexture.js";
import { Control3D } from "./control3D.js";
import { Texture } from "@babylonjs/core/Materials/Textures/texture.js";
/**
 * The base class for controls that display content
 */
var ContentDisplay3D = /** @class */ (function (_super) {
    __extends(ContentDisplay3D, _super);
    function ContentDisplay3D() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._contentResolution = 512;
        _this._contentScaleRatio = 2;
        return _this;
    }
    Object.defineProperty(ContentDisplay3D.prototype, "content", {
        /**
         * Gets or sets the GUI 2D content used to display the button's facade
         */
        get: function () {
            return this._content;
        },
        set: function (value) {
            this._content = value;
            if (!value || !this._host || !this._host.utilityLayer) {
                return;
            }
            if (!this._facadeTexture) {
                this._facadeTexture = new AdvancedDynamicTexture("Facade", this._contentResolution, this._contentResolution, this._host.utilityLayer.utilityLayerScene, true, Texture.TRILINEAR_SAMPLINGMODE);
                this._facadeTexture.rootContainer.scaleX = this._contentScaleRatio;
                this._facadeTexture.rootContainer.scaleY = this._contentScaleRatio;
                this._facadeTexture.premulAlpha = true;
            }
            else {
                this._facadeTexture.rootContainer.clearControls();
            }
            this._facadeTexture.addControl(value);
            this._applyFacade(this._facadeTexture);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ContentDisplay3D.prototype, "contentResolution", {
        /**
         * Gets or sets the texture resolution used to render content (512 by default)
         */
        get: function () {
            return this._contentResolution;
        },
        set: function (value) {
            if (this._contentResolution === value) {
                return;
            }
            this._contentResolution = value;
            this._resetContent();
        },
        enumerable: false,
        configurable: true
    });
    ContentDisplay3D.prototype._disposeFacadeTexture = function () {
        if (this._facadeTexture) {
            this._facadeTexture.dispose();
            this._facadeTexture = null;
        }
    };
    ContentDisplay3D.prototype._resetContent = function () {
        this._disposeFacadeTexture();
        this.content = this._content;
    };
    /**
     * Apply the facade texture (created from the content property).
     * This function can be overloaded by child classes
     * @param facadeTexture defines the AdvancedDynamicTexture to use
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ContentDisplay3D.prototype._applyFacade = function (facadeTexture) { };
    return ContentDisplay3D;
}(Control3D));
export { ContentDisplay3D };
//# sourceMappingURL=contentDisplay3D.js.map